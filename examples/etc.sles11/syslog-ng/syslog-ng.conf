## see /usr/share/doc/packages/syslog-ng/syslog-ng.txt
## - check syntax with 'syslog-ng -s [-f file]'
##   - be careful, not all errors are caught 
##   - especially nasty one is ref to undefined filter (syslog-ng is killed by oom-killer)
## - moving to new machine: change "localip" in remote logging def
## - to adding new app: add
##   - 'filter f_my_app' and other filter definitions to application section of filters
##   - '/var/log/app.<appname>' to destinations, filter all relevant messages there
##   - 'or filter(my_app_warn_noise)' to f_warn_noise for false errors/warnings (/var/log/warn)
##   - 'or filter(my_app_msg_noise)'  to f_too_noisy  for too specific/frequent messages (/var/log/messages)
##   - 'or filter(my_app_higvolume)'  to f_localonly  for too frequent audit messages (remote log)
##   - /var/log/app.<appname> to /etc/logrotate.d/syslog

## global options
options {
  long_hostnames(off);
  sync(0);
  stats_freq(86400);
  mark_freq(3600);
  owner(root);
  group(wheel);
  perm(0644);
};

## local sources
source src {
  internal();
  unix-dgram("/dev/log");
  # unix-dgram("/var/lib/dhcp/dev/log");
};

## filters quickref:
# - facility(f1[,f2..]):
#   auth, authpriv, cron, daemon, kern, lpr, mail, mark, news, syslog, user, uucp, local0-7
# - level(pri1[,pri2...pri3]):
#   debug, info, notice, warning, error, crit, alert, emerg, panic
# - also: program(re), host(re), match(msg_re), filter(filter_name), netmask(ip/mask)
##

## dummy filter (matching nothing) to keep others not-empty
filter f_dummy        { program("dummy"); };

## noise filters
# messages (>=warning) to exclude from warning log ('warn')
filter f_warn_noise   { filter(f_iptables);
#                        or filter(f_samba_noise_w); 
                      };

# high-volume app messages to exclude from catch-all log ('messages')
filter f_too_noisy    { filter(f_dummy);
#                        or filter(f_samba_noise) 
#                        or filter(f_slapd_noise);
                      };

# messages (>=info) to keep local
filter f_localonly    { (facility(cron,mail,syslog) and level(info));
#                        or filter(f_slapd_noise)
#                        or filter(f_samba_noise); 
                      };
### destinations: 

## system: split into iptables, rest of kernel, warning and all messages log  

# kernel messages (except iptables)
filter f_kernel    { facility(kern) and not filter(f_iptables); };
destination kernel { file("/var/log/kernel"); };
log { source(src); filter(f_kernel); destination(kernel); };

# iptables
filter f_iptables    { facility(kern) and match(" IN=") and match(" OUT="); };
destination firewall { file("/var/log/firewall"); };
log { source(src); filter(f_iptables); destination(firewall); };

# warnings (except iptables and app noise from f_warn_noise)
filter f_warn    { level(warn..emerg) and not filter(f_warn_noise); };
destination warn { file("/var/log/warn" fsync(yes)); };
log { source(src); filter(f_warn); destination(warn); };
# dup warnings to tty10
#destination cons { file("/dev/tty10" group(tty) perm(0620)); };
#log { source(src); filter(f_warn); destination(cons); };

# all messages (except too noisy apps messages from f_toonoisy)
filter f_not_noisy { not filter(f_too_noisy); };
destination messages {
  file("/var/log/messages"
    template("$R_YEAR.$R_MONTH.$R_DAY $R_HOUR:$R_MIN:$R_SEC $HOST($FACILITY.$PRIORITY) $MESSAGE\n")
  );
};
log { source(src); filter(f_not_noisy); destination(messages); };

## remote logging
# slapd 2.4 is logging everything at 'debug' level
#filter f_loghost    { (level(info..emerg) and not filter(f_localonly)) or filter(f_slapd_imp); };
filter f_loghost    { level(info..emerg) and not filter(f_localonly); };
destination loghost { udp(    "10.1.202.1"          port(514)
                      localip("10.0.150.110") localport(1514)); };
log { source(src); filter(f_loghost); destination(loghost); };

## applications: log to /var/log/app.<appname>

# ## openldap slapd
# filter f_slapd        { facility(local5) and program("slapd"); };
# # what to skip from app.slapd
# filter f_slapd_skip  { filter(f_slapd) and (
#      match('closed \(.*\)$|closed$')
#   or match('connection_read\(\w+\): no connection')
#   # skip most binds/unbinds and OK results
#   or match('ACCEPT from IP=127|SRCH attr=')
#   or match('mech=SIMPLE ssf=0|SEARCH RESULT tag=101 err=0|UNBIND')
#   or match('RESULT (tag=97|tag=105|oid=) err=0 text=')
#   # those are binding all the time
#   or match('BIND dn="uid=(samba-crow|nss-crow|repl-raven|linux-ws|dom-member),ou=Service Accounts')
#   or match('BIND anonymous mech=implicit ssf=0')
#   # anon searches
#   or match('BIND dn=\"\" method=128')
#   # to mostly filter out local system search activity (leaving only mods)
#   or match('SRCH base="ou=(mail|Groups|Samba|Accounts,ou=Samba),')
#   or match('SRCH base="" scope=0')
#   );
# };
# # what to skip from general messages and remote logging
# filter f_slapd_noise  { filter(f_slapd) and (
#      match('closed \(.*\)$|closed$')
#   or match('connection_read\(\w+\): no connection')
#   # skip most binds/unbinds and OK results
#   or match('ACCEPT from IP=127|SRCH attr=')
#   or match('(mech=SIMPLE ssf=0|SEARCH RESULT tag=101 err=0|UNBIND)')
#   or match('RESULT (tag=97|tag=105|oid=) err=0 text=')
#   or match('RESULT tag=101 err=32')
#   # those are binding all the time
#   or match('BIND dn="uid=.*,ou=Service Accounts')
#   # anon searches
#   or match('BIND dn=\"\" method=128')
#   # to completely filter out local system search activity (leaving only mods)
#   or match('SRCH base=')
#   );
# };
# filter f_slapd_imp { filter(f_slapd) and not filter(f_slapd_skip); };
# destination d_slapd { file("/var/log/app.slapd"); };
# log { source(src); filter(f_slapd_imp); destination(d_slapd); };
# 
# ## samba
# filter f_samba { facility(daemon,user) and program("(smbd|nmbd|winbindd|smbd_audit|drweb_samba|net)"); };
# # noise on levels >= warn: some too frequent lines
# filter f_samba_noise_w  { filter(f_samba) and level(error,warning)
#   and match(": \\["); };
# # noise on levels <= notice: all except some interestig ones
# # keep audit in samba log only for now
# filter f_samba_noise_n  { filter(f_samba) and level(notice,info)
#   and match(": \\[")
#    or match(" (smbldap_open_connection: connection opened|init_group_from_ldap: Entry found for group:)")
#    or match("  (Processing section|setup_new_vc_session: New VC == 0)")
#    or match(" (opened|closed) file "); };
# # samba audit by smbd_audit: all is logged on 'notice' level
# # drwebd_samba is like full_audit (logging file ops), if this is desirable then allow it to log
# filter f_samba_audit    { filter(f_samba) and level(notice)
#                           and program("smbd_audit"); };
# # match samba noise on all levels
# filter f_samba_noise    { filter(f_samba_noise_w) or filter(f_samba_noise_n); };
# # match samba interesting stuff on all levels
# filter f_samba_imp      { filter(f_samba)
#                      and (filter(f_samba_audit) or not filter(f_samba_noise)); };
# destination samba { file("/var/log/app.samba"); };
# log { source(src); filter(f_samba_imp); destination(samba); };
